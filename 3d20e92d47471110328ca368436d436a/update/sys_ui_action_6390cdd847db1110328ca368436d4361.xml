<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>checkmarxone_configuration_save</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>current.canWrite()</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>true</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>true</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages>Saves and tests the validity of the Checkmarx One Integration credentials.</messages>
        <name>Save and Test Credentials</name>
        <onclick>clientValidation()</onclick>
        <order>100</order>
        <script><![CDATA[function clientValidation() {
    g_form.clearMessages();
    if (!g_form.getValue("client_id") && !g_form.getValue("client_secret")) {
        g_form.addErrorMessage(getMessage("Enter Client ID and Client Key."));
        return false;
    } else if (!g_form.getValue("client_id")) {
        g_form.addErrorMessage(getMessage("Enter Client ID."));
        return false;
    } else if (!g_form.getValue("client_secret")) {
        g_form.addErrorMessage(getMessage("Enter Client Key."));
        return false;
    } else if (!g_form.getValue("checkmarxone_api_base_url")) {
        g_form.addErrorMessage(getMessage("Enter CheckmarxOne API Base URL"));
        return false;
    } else if (!g_form.getValue("checkmarxone_server_url")) {
        g_form.addErrorMessage(getMessage("Enter CheckmarxOne AccessControl Base URL"));
        return false;
    }
    if (g_form.getValue("import_sast") == "false" && g_form.getValue("import_sca") == "false") {
        g_form.addWarningMessage(getMessage("Select SCA or SAST to proceed."));
        return false;
    }
    gsftSubmit(null, g_form.getFormElement(), 'checkmarxone_configuration_save');
}

if (typeof window == 'undefined')
    serverSide();



if (typeof window == 'undefined')
    serverSide();

function serverSide() {
    current.doRedirect = true;
    current.update();
    action.setRedirectURL(current);
    var instance = current.getValue("integration_instance");
    var implConfig = new GlideRecord("sn_sec_int_impl_config");
    implConfig.addQuery("implementation", instance);
    implConfig.query();
    while (implConfig.next()) {
        var configName = implConfig.getDisplayValue("configuration");
        var configVal = implConfig.getDisplayValue("value");
        if ((configName == "limit")) {
            current.setValue(configName, configVal);
        }
    }
    current.update();
    if (new CheckmarxOneConfigUtil().saveInstanceParams(current.getUniqueValue())) {
        var config = new GlideRecord("x_chec3_chexone_checkmarxone_configuration");
        if (config.get(current.getUniqueValue())) {
            var res = new x_chec3_chexone.CheckmarxOneConfigUtil().testCredentials(current, current.getUniqueValue());
            if (res.result == "true") {
                gs.addInfoMessage(gs.getMessage("Checkmarxone validation successful."));
            } else
                gs.addErrorMessage(res.error);
        }
    }
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-17 19:16:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6390cdd847db1110328ca368436d4361</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>Save and Test Credentials</sys_name>
        <sys_overrides/>
        <sys_package display_value="Checkmarx One Vulnerability Integration" source="x_chec3_chexone">3d20e92d47471110328ca368436d436a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Checkmarx One Vulnerability Integration">3d20e92d47471110328ca368436d436a</sys_scope>
        <sys_update_name>sys_ui_action_6390cdd847db1110328ca368436d4361</sys_update_name>
        <sys_updated_by>apoorva.singh@checkmarx.com</sys_updated_by>
        <sys_updated_on>2023-03-15 06:58:31</sys_updated_on>
        <table>x_chec3_chexone_checkmarxone_configuration</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
