<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_chec3_chexone.CheckmarxOneAppListProcessor</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Converts the appinfo xml data into a json object that can be consumed by the VR Application Vulnerability API.</description>
        <name>CheckmarxOneAppListProcessor</name>
        <script><![CDATA[var CheckmarxOneAppListProcessor = Class.create();
CheckmarxOneAppListProcessor.prototype = Object.extendsObject(sn_vul.ApplicationVulnerabilityImportProcessorBase, {
    /*
     * Converts an xml string of application information objects into javascript objects
     *    passed individually to the VR AppVul API
     */
    MSG: 'CheckmarxOne AppListProcessor:',
    process: function(attachment) {
        if (!attachment) {
            gs.warn(gs.getMessage('CheckmarxOneAppListProcessor: Called with no attachment'));
            return;
        }
        try {
            //Parsing the Project List attachment
            var appDoc = new XMLDocument2();
            appDoc.parseXML(new GlideSysAttachment().getContent(attachment));
            var listNode = appDoc.getNode("/appInfoList/xml/projects");
            var iter = listNode.getChildNodeIterator();
            if (iter.hasNext())
                iter.next();
            while (iter.hasNext()) {
                var appNode = iter.next();
                var attributes = appNode.getAttributes();
                //map attributes from Checkmarx into the servicenow expected format'
                var appObj = {
                    source_app_id: attributes.id,
                    app_name: attributes.name,
                    source_assigned_teams: attributes.groups,
                    description: attributes.description,
                };
                //Updating the project information in ServiceNow table
                var result = this.AVR_API.createOrUpdateApp(appObj);
                if (result != null) {
                    if (result.inserted)
                        this.import_counts.inserted++;
                    else if (result.updated)
                        this.import_counts.updated++;
                    else if (result.unchanged)
                        this.import_counts.unchanged++;
                }
                if (iter.hasNext())
                    iter.next();
            }
        } catch (ex) {
            errorMessage = gs.getMessage("Error in retriving data for app list integration!");
            gs.error(this.MSG + "errorMessage " + ex);
            throw ex;
        }

        this.completeProcess(this.integrationProcessGr, this.import_counts);
    },


    type: 'CheckmarxOneAppListProcessor'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-21 12:03:00</sys_created_on>
        <sys_id>716c87ad471f1110328ca368436d438a</sys_id>
        <sys_mod_count>44</sys_mod_count>
        <sys_name>CheckmarxOneAppListProcessor</sys_name>
        <sys_package display_value="Checkmarx One Vulnerability Integration" source="x_chec3_chexone">3d20e92d47471110328ca368436d436a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Checkmarx One Vulnerability Integration">3d20e92d47471110328ca368436d436a</sys_scope>
        <sys_update_name>sys_script_include_716c87ad471f1110328ca368436d438a</sys_update_name>
        <sys_updated_by>apoorva.singh@checkmarx.com</sys_updated_by>
        <sys_updated_on>2023-03-16 10:55:08</sys_updated_on>
    </sys_script_include>
</record_update>
